{
  config,
  withSystem,
  lib,
  ...
}:
{
  text.readme.parts.tmux =
    # markdown
    ''
      ## Tmux 

      [tmux](https://github.com/tmux/tmux/wiki) with configurations

    '';

  text.readme.parts.tmux-plugins = withSystem (builtins.head config.systems) (
    { pkgs, ... }:
    let
      fallbackDescriptions = {
        yank = "Better yank support";
        t-smart-tmux-session-manager = "Smart session managment";
        vim-tmux-navigator = "Better support for navigation with tmux and vim";
      };
      plugins = [
        "better-mouse-mode"
        "yank"
        "t-smart-tmux-session-manager"
        "tmux-thumbs"
        "fzf-tmux-url"
        "tilish"
        "vim-tmux-navigator"
        "tmux-fzf"
        "catppuccin"
      ];

      pluginRows = lib.map (
        name:
        let
          plugin = pkgs.tmuxPlugins.${name};
          meta = plugin.meta or { };
          desc = meta.description or fallbackDescriptions.${name} or "No description.";
          url = meta.homepage or meta.url or null;
          nameCell = if url != null then "[${name}](${url})" else name;
        in
        ''
          - ${nameCell}

          ${desc}
        ''
      ) plugins;
    in
    lib.concatLines (
      [
        ''
          ### Tmux plugins
        ''
      ]
      ++ pluginRows
    )
  );

  perSystem =
    { pkgs, ... }:
    {
      packages.tmux =
        let
          tmuxConf = ''
            # This file is generated by https://github.com/dsnn/flakes/tmux

            #========================#
            #          BASE          #
            #========================#

            #========================#
            #         PLUGINS        #
            #========================#
          '';
          tmuxConfFile = pkgs.writeText "tmux.conf" tmuxConf;
        in
        pkgs.writeShellApplication {
          name = "tmux-wrapper";
          runtimeInputs = [ pkgs.tmux ];
          text = "tmux -f ${tmuxConfFile} \"$@\"";
        };
    };
}
